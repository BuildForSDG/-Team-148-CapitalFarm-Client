{"version":3,"sources":["components/Layout.jsx","routes/index.jsx","routes/Routes.jsx","App.jsx","redux/layout/constants.jsx","redux/layout/reducers.jsx","constants/layout.jsx","helpers/authUtils.jsx","redux/auth/reducers.jsx","redux/auth/constants.jsx","redux/appMenu/reducers.jsx","redux/appMenu/constants.jsx","redux/reducers.jsx","helpers/api.jsx","redux/auth/saga.jsx","redux/auth/actions.jsx","redux/layout/actions.jsx","redux/layout/saga.jsx","redux/appMenu/utils.jsx","redux/appMenu/actions.jsx","redux/appMenu/saga.jsx","redux/sagas.jsx","redux/store.jsx","index.jsx"],"names":["AuthLayout","React","lazy","withLayout","WrappedComponent","HOC","Component","getLayout","render","Layout","this","fallback","props","connect","state","layout","Login","Logout","Register","ForgetPassword","Confirm","Dashboard","Starter","Profile","Error404","Error500","PrivateRoute","component","roles","rest","to","pathname","from","location","rootRoute","path","exact","route","dashboardRoutes","name","icon","FeatherIcon","header","badge","variant","text","pagesRoutes","children","Route","authRoutes","flattenRoutes","routes","flatRoutes","forEach","item","push","authProtectedRoutes","allFlattenRoutes","Routes","map","index","key","App","INIT_STATE","layoutType","layoutWidth","leftSideBarTheme","leftSideBarType","showRightSidebar","action","type","payload","getLoggedInUser","user","Cookies","get","JSON","parse","loading","Auth","error","passwordResetStatus","AppMenu","combineReducers","fetchJSON","url","options","fetch","then","response","status","json","catch","login","logout","register","forgetPassword","watchLoginUser","watchLogoutUser","watchRegisterUser","watchForgetPassword","authSaga","setSession","cookies","set","stringify","remove","username","password","body","method","headers","call","CAPITAL_FARM_SERVER_URL","put","message","history","fullname","email","takeEvery","all","fork","changeSidebarTheme","theme","changeSidebarType","sidebarType","changeLayout","changeLayoutWidth","changeLeftSidebarTheme","changeLeftSidebarType","toggleRightSidebar","hideRightSidebar","watchChangeLayoutType","watchChangeLayoutWidth","watchChangeLeftSidebarTheme","watchChangeLeftSidebarType","watchToggleRightSidebar","watchShowRightSidebar","watchHideRightSidebar","LayoutSaga","changeBodyAttribute","attribute","value","document","setAttribute","manageBodyClass","cssClass","classList","add","toggle","changeLeftSidebarThemeAction","changeSidebarTypeAction","width","uuid","assignIdAndParent","menuItems","parentId","id","active","initMenuSuccess","changeActiveMenuFromLocationSuccess","activatedMenuItemIds","initMenuAndItems","changeActiveMenuFromLocation","watchMenuInit","watchMenuChange","appMenuSaga","getActivatedMenuItemIds","matchingItems","menuItem","window","indexOf","assignIds","rootSaga","getState","layoutSaga","sagaMiddleware","createSagaMiddleware","middlewares","ReactDOM","store","initialState","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","reducers","applyMiddleware","run","sagas","configureStore","getElementById"],"mappings":"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","file":"static/js/main.1f341c84.chunk.js","sourcesContent":["// @flow\nimport React, { Component, Suspense } from 'react';\nimport { connect } from 'react-redux';\n\n// import * as layoutConstants from '../constants/layout';\n\n// Lazy loading and code splitting -\n// Derieved idea from https://blog.logrocket.com/lazy-loading-components-in-react-16-6-6cea535c0b52\nconst loading = () => <div />;\n\n// All layouts/containers\nconst AuthLayout = React.lazy(() => import('../layouts/Auth'));\n// const VerticalLayout = React.lazy(() => import('../layouts/Vertical'));\n// const HorizontalLayout = React.lazy(() => import('../layouts/Horizontal'));\n\n/**\n * Exports the component with layout wrapped to it\n * @param {} WrappedComponent\n */\nconst withLayout = (WrappedComponent) => {\n\tconst HOC = class extends Component {\n\t\t/**\n         * Returns the layout component based on different properties\n         */\n\t\tgetLayout = () => {\n\t\t\t// if (!isUserAuthenticated())\n\t\t\treturn AuthLayout;\n\n\t\t\t// let layoutCls = VerticalLayout;\n\n\t\t\t// switch (this.props.layout.layoutType) {\n\t\t\t// \tcase layoutConstants.LAYOUT_HORIZONTAL:\n\t\t\t// \t\tlayoutCls = HorizontalLayout;\n\t\t\t// \t\tbreak;\n\t\t\t// \tdefault:\n\t\t\t// \t\tlayoutCls = VerticalLayout;\n\t\t\t// \t\tbreak;\n\t\t\t// }\n\t\t\t// return layoutCls;\n\t\t};\n\n\t\trender() {\n\t\t\tconst Layout = this.getLayout();\n\t\t\treturn (\n\t\t\t\t<Suspense fallback={loading()}>\n\t\t\t\t\t<Layout {...this.props}>\n\t\t\t\t\t\t<WrappedComponent {...this.props} />\n\t\t\t\t\t</Layout>\n\t\t\t\t</Suspense>\n\t\t\t);\n\t\t}\n\t};\n\n\tconst mapStateToProps = (state) => {\n\t\treturn {\n\t\t\tlayout: state.Layout\n\t\t};\n\t};\n\n\treturn connect(mapStateToProps, null)(HOC);\n};\n\nexport default withLayout;\n","import React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { Route } from 'react-router-dom';\nimport * as FeatherIcon from 'react-feather';\n\n// auth\nconst Login = React.lazy(() => import('../pages/auth/Login'));\nconst Logout = React.lazy(() => import('../pages/auth/Logout'));\nconst Register = React.lazy(() => import('../pages/auth/Register'));\nconst ForgetPassword = React.lazy(() => import('../pages/auth/ForgetPassword'));\nconst Confirm = React.lazy(() => import('../pages/auth/Confirm'));\n// dashboard\nconst Dashboard = React.lazy(() => import('../pages/dashboard'));\n\n// pages\nconst Starter = React.lazy(() => import('../pages/other/Starter'));\nconst Profile = React.lazy(() => import('../pages/other/Profile/'));\nconst Error404 = React.lazy(() => import('../pages/other/Error404'));\nconst Error500 = React.lazy(() => import('../pages/other/Error500'));\n\n// handle auth and authorization\nconst PrivateRoute = ({ component: Component, roles, ...rest }) => (\n\t<Route\n\t\t{...rest}\n\t\trender={(props) => {\n\t\t\t// if (!isUserAuthenticated()) {\n\t\t\t// not logged in so redirect to login page with the return url\n\t\t\treturn <Redirect to={{ pathname: '/account/login', state: { from: props.location } }} />;\n\t\t\t// }\n\n\t\t\t// const loggedInUser = getLoggedInUser();\n\t\t\t// check if route is restricted by role\n\t\t\t// if (roles && roles.indexOf(loggedInUser.role) === -1) {\n\t\t\t// role not authorised so redirect to home page\n\t\t\t// return <Redirect to={{ pathname: '/' }} />;\n\t\t\t// }\n\n\t\t\t// authorised so return component\n\t\t\t// return <Component {...props} />;\n\t\t}}\n\t/>\n);\n\n// root routes\nconst rootRoute = {\n\tpath: '/',\n\texact: true,\n\tcomponent: () => <Redirect to=\"/dashboard\" />,\n\troute: PrivateRoute\n};\n\n// dashboards\nconst dashboardRoutes = {\n\tpath: '/dashboard',\n\tname: 'Dashboard',\n\ticon: FeatherIcon.Home,\n\theader: 'Navigation',\n\tbadge: {\n\t\tvariant: 'success',\n\t\ttext: '1'\n\t},\n\tcomponent: Dashboard,\n\troles: [ 'Admin' ],\n\troute: PrivateRoute\n};\n\n// pages\nconst pagesRoutes = {\n\tpath: '/pages',\n\tname: 'Pages',\n\theader: 'Custom',\n\ticon: FeatherIcon.FileText,\n\tchildren: [\n\t\t{\n\t\t\tpath: '/pages/starter',\n\t\t\tname: 'Starter',\n\t\t\tcomponent: Starter,\n\t\t\troute: PrivateRoute,\n\t\t\troles: [ 'Admin' ]\n\t\t},\n\t\t{\n\t\t\tpath: '/pages/profile',\n\t\t\tname: 'Profile',\n\t\t\tcomponent: Profile,\n\t\t\troute: PrivateRoute,\n\t\t\troles: [ 'Admin' ]\n\t\t},\n\t\t{\n\t\t\tpath: '/pages/error-404',\n\t\t\tname: 'Error 404',\n\t\t\tcomponent: Error404,\n\t\t\troute: Route\n\t\t},\n\t\t{\n\t\t\tpath: '/pages/error-500',\n\t\t\tname: 'Error 500',\n\t\t\tcomponent: Error500,\n\t\t\troute: Route\n\t\t}\n\t]\n};\n\n// auth\nconst authRoutes = {\n\tpath: '/account',\n\tname: 'Auth',\n\tchildren: [\n\t\t{\n\t\t\tpath: '/account/login',\n\t\t\tname: 'Login',\n\t\t\tcomponent: Login,\n\t\t\troute: Route\n\t\t},\n\t\t{\n\t\t\tpath: '/account/logout',\n\t\t\tname: 'Logout',\n\t\t\tcomponent: Logout,\n\t\t\troute: Route\n\t\t},\n\t\t{\n\t\t\tpath: '/account/register',\n\t\t\tname: 'Register',\n\t\t\tcomponent: Register,\n\t\t\troute: Route\n\t\t},\n\t\t{\n\t\t\tpath: '/account/confirm',\n\t\t\tname: 'Confirm',\n\t\t\tcomponent: Confirm,\n\t\t\troute: Route\n\t\t},\n\t\t{\n\t\t\tpath: '/account/forget-password',\n\t\t\tname: 'Forget Password',\n\t\t\tcomponent: ForgetPassword,\n\t\t\troute: Route\n\t\t}\n\t]\n};\n\n// flatten the list of all nested routes\nconst flattenRoutes = (routes) => {\n\tlet flatRoutes = [];\n\n\troutes = routes || [];\n\troutes.forEach((item) => {\n\t\tflatRoutes.push(item);\n\n\t\tif (typeof item.children !== 'undefined') {\n\t\t\tflatRoutes = [ ...flatRoutes, ...flattenRoutes(item.children) ];\n\t\t}\n\t});\n\treturn flatRoutes;\n};\n\n// All routes\nconst allRoutes = [ rootRoute, dashboardRoutes, pagesRoutes, authRoutes ];\n\nconst authProtectedRoutes = [ dashboardRoutes, pagesRoutes ];\nconst allFlattenRoutes = flattenRoutes(allRoutes);\nexport { allRoutes, authProtectedRoutes, allFlattenRoutes };\n","import React from 'react';\r\nimport { BrowserRouter, Switch } from 'react-router-dom';\r\n\r\n// layout HOC\r\nimport withLayout from '../components/Layout';\r\nimport { allFlattenRoutes as routes } from './index';\r\n\r\n\r\nconst Routes = () => (\r\n    // rendering the router with layout\r\n    <BrowserRouter>\r\n        <Switch>\r\n            {routes.map((route, index) => {\r\n                return (\r\n                    !route.children && (\r\n                        <route.route\r\n                            key={index}\r\n                            path={route.path}\r\n                            roles={route.roles}\r\n                            exact={route.exact}\r\n                            component={withLayout(props => {\r\n                                return <route.component {...props} />;\r\n                            })}></route.route>\r\n                    )\r\n                );\r\n            })}\r\n        </Switch>\r\n    </BrowserRouter>\r\n);\r\n\r\nexport default Routes;\r\n","import React, { Component } from 'react';\r\nimport Routes from './routes/Routes';\r\n\r\n// Themes\r\n\r\n// default\r\nimport './assets/scss/theme.scss';\r\n\r\n/**\r\n * Main app component\r\n */\r\nclass App extends Component {\r\n\trender() {\r\n\t\treturn <Routes />;\r\n\t}\r\n}\r\n\r\nexport default App;\r\n","/* LAYOUT */\nexport const CHANGE_LAYOUT = 'CHANGE_LAYOUT';\nexport const CHANGE_LAYOUT_WIDTH = 'CHANGE_LAYOUT_WIDTH';\nexport const CHANGE_SIDEBAR_THEME = 'CHANGE_SIDEBAR_THEME';\nexport const CHANGE_SIDEBAR_TYPE = 'CHANGE_SIDEBAR_TYPE';\n\n/* RIGHT SIDEBAR */\nexport const TOGGLE_RIGHT_SIDEBAR = 'TOGGLE_RIGHT_SIDEBAR';\nexport const SHOW_RIGHT_SIDEBAR = 'SHOW_RIGHT_SIDEBAR';\nexport const HIDE_RIGHT_SIDEBAR = 'HIDE_RIGHT_SIDEBAR';\n","// @flow\nimport {\n    CHANGE_LAYOUT,\n    CHANGE_LAYOUT_WIDTH,\n    CHANGE_SIDEBAR_THEME,\n    CHANGE_SIDEBAR_TYPE,\n    TOGGLE_RIGHT_SIDEBAR,\n    SHOW_RIGHT_SIDEBAR,\n    HIDE_RIGHT_SIDEBAR,\n} from './constants';\n\nimport * as layoutConstants from '../../constants/layout';\n\nconst INIT_STATE = {\n    layoutType: layoutConstants.LAYOUT_VERTICAL,\n    layoutWidth: layoutConstants.LAYOUT_WIDTH_FLUID,\n    leftSideBarTheme: layoutConstants.LEFT_SIDEBAR_THEME_DEFAULT,\n    leftSideBarType: layoutConstants.LEFT_SIDEBAR_TYPE_FIXED,\n    showRightSidebar: false,\n};\n\n\nconst Layout = (state = INIT_STATE, action) => {\n    switch (action.type) {\n        case CHANGE_LAYOUT:\n            return {\n                ...state,\n                layoutType: action.payload,\n            };\n        case CHANGE_LAYOUT_WIDTH:\n            return {\n                ...state,\n                layoutWidth: action.payload,\n            };\n        case CHANGE_SIDEBAR_THEME:\n            return {\n                ...state,\n                leftSideBarTheme: action.payload,\n            };\n        case CHANGE_SIDEBAR_TYPE:\n            return {\n                ...state,\n                leftSideBarType: action.payload,\n            };\n        case TOGGLE_RIGHT_SIDEBAR:\n            return {\n                ...state,\n                showRightSidebar: !state.showRightSidebar,\n            };\n        case SHOW_RIGHT_SIDEBAR:\n            return {\n                ...state,\n                showRightSidebar: true,\n            };\n        case HIDE_RIGHT_SIDEBAR:\n            return {\n                ...state,\n                showRightSidebar: false,\n            };\n        default:\n            return state;\n    }\n};\n\nexport default Layout;\n","/* Layout types and other constants */\n\nexport const LAYOUT_VERTICAL = 'vertical';\nexport const LAYOUT_HORIZONTAL = 'topnav';\n\nexport const LAYOUT_WIDTH_FLUID = 'fluid';\nexport const LAYOUT_WIDTH_BOXED = 'boxed';\n\nexport const LEFT_SIDEBAR_THEME_DEFAULT = 'default';\nexport const LEFT_SIDEBAR_THEME_DARK = 'dark';\n\nexport const LEFT_SIDEBAR_TYPE_FIXED = 'fixed';\nexport const LEFT_SIDEBAR_TYPE_CONDENSED = 'condensed';\nexport const LEFT_SIDEBAR_TYPE_SCROLLABLE = 'scrollable';","// @flow\nimport jwtDecode from 'jwt-decode';\nimport { Cookies } from 'react-cookie';\n\n/**\n * Checks if user is authenticated\n */\nconst isUserAuthenticated = () => {\n    const user = getLoggedInUser();\n    if (!user) {\n        return false;\n    }\n    const decoded = jwtDecode(user.token);\n    const currentTime = Date.now() / 1000;\n    if (decoded.exp < currentTime) {\n        console.warn('access token expired');\n        return false;\n    }\n    return true;\n};\n\n/**\n * Returns the logged in user\n */\nconst getLoggedInUser = () => {\n    const cookies = new Cookies();\n    const user = cookies.get('user');\n    return user ? (typeof user === 'object' ? user : JSON.parse(user)) : null;\n};\n\nexport { isUserAuthenticated, getLoggedInUser };","// @flow\nimport {\n    LOGIN_USER,\n    LOGIN_USER_SUCCESS,\n    LOGIN_USER_FAILED,\n    LOGOUT_USER,\n    REGISTER_USER,\n    REGISTER_USER_SUCCESS,\n    REGISTER_USER_FAILED,\n    FORGET_PASSWORD,\n    FORGET_PASSWORD_SUCCESS,\n    FORGET_PASSWORD_FAILED,\n} from './constants';\n\nimport { getLoggedInUser } from '../../helpers/authUtils';\n\nconst INIT_STATE = {\n    user: getLoggedInUser(),\n    loading: false,\n};\n\n\nconst Auth = (state = INIT_STATE, action) => {\n    switch (action.type) {\n        case LOGIN_USER:\n            return { ...state, loading: true };\n        case LOGIN_USER_SUCCESS:\n            return { ...state, user: action.payload, loading: false, error: null };\n        case LOGIN_USER_FAILED:\n            return { ...state, error: action.payload, loading: false };\n        case REGISTER_USER:\n            return { ...state, loading: true };\n        case REGISTER_USER_SUCCESS:\n            return { ...state, user: action.payload, loading: false, error: null };\n        case REGISTER_USER_FAILED:\n            return { ...state, error: action.payload, loading: false };\n        case LOGOUT_USER:\n            return { ...state, user: null };\n        case FORGET_PASSWORD:\n            return { ...state, loading: true };\n        case FORGET_PASSWORD_SUCCESS:\n            return { ...state, passwordResetStatus: action.payload, loading: false, error: null };\n        case FORGET_PASSWORD_FAILED:\n            return { ...state, error: action.payload, loading: false };\n        default:\n            return { ...state };\n    }\n};\n\nexport default Auth;\n","export const CAPITAL_FARM_SERVER_URL = 'https://capital-farm-server.herokuapp.com/';\n/* AUTH */\nexport const LOGIN_USER = 'LOGIN_USER';\nexport const LOGIN_USER_SUCCESS = 'LOGIN_USER_SUCCESS';\nexport const LOGIN_USER_FAILED = 'LOGIN_USER_FAILED';\nexport const REGISTER_USER = 'REGISTER_USER';\nexport const REGISTER_USER_SUCCESS = 'REGISTER_USER_SUCCESS';\nexport const REGISTER_USER_FAILED = 'REGISTER_USER_FAILED';\nexport const LOGOUT_USER = 'LOGOUT_USER';\nexport const FORGET_PASSWORD = 'FORGET_PASSWORD';\nexport const FORGET_PASSWORD_SUCCESS = 'FORGET_PASSWORD_SUCCESS';\nexport const FORGET_PASSWORD_FAILED = 'FORGET_PASSWORD_FAILED';","// @flow\nimport {\n    INIT_MENU,\n    INIT_MENU_SUCCESS,\n    CHANGE_ACTIVE_MENU_FROM_LOCATION,\n    CHANGE_ACTIVE_MENU_FROM_LOCATION_SUCCESS,\n} from './constants';\n\n\nconst AppMenu = (state = {}, action) => {\n    switch (action.type) {\n        case INIT_MENU:\n            return action.payload;\n        case INIT_MENU_SUCCESS:\n            return { ...state, ...action.payload };\n        case CHANGE_ACTIVE_MENU_FROM_LOCATION:\n            return { ...state };\n        case CHANGE_ACTIVE_MENU_FROM_LOCATION_SUCCESS:\n            return { ...state, ...action.payload };\n        default:\n            return state;\n    }\n};\n\nexport default AppMenu;\n","/* APP MENU */\nexport const INIT_MENU = 'INIT_MENU';\nexport const INIT_MENU_SUCCESS = 'INIT_MENU_SUCCESS';\nexport const CHANGE_ACTIVE_MENU_FROM_LOCATION = 'CHANGE_ACTIVE_MENU_FROM_LOCATION';\nexport const CHANGE_ACTIVE_MENU_FROM_LOCATION_SUCCESS = 'CHANGE_ACTIVE_MENU_FROM_LOCATION_SUCCESS';\n","// @flow\n\nimport { combineReducers } from 'redux';\nimport Layout from './layout/reducers';\nimport Auth from './auth/reducers';\nimport AppMenu from './appMenu/reducers';\n\nexport default combineReducers({\n    Auth,\n    AppMenu,\n    Layout,\n});\n","/**\n * Fetch data from given url\n * @param {*} url\n * @param {*} options\n */\nconst fetchJSON = (url, options = {}) => {\n    return fetch(url, options)\n        .then((response) => {\n            if (!response.status === 200) {\n                throw response.json();\n            }\n            return response.json();\n        })\n        .then((json) => {\n            return json;\n        })\n        .catch((error) => {\n            throw error;\n        });\n};\n\nexport { fetchJSON };","// @flow\r\nimport { Cookies } from 'react-cookie';\r\nimport { all, call, fork, put, takeEvery } from 'redux-saga/effects';\r\n\r\nimport { fetchJSON } from '../../helpers/api';\r\n\r\nimport { LOGIN_USER, LOGOUT_USER, REGISTER_USER, FORGET_PASSWORD, CAPITAL_FARM_SERVER_URL } from './constants';\r\n\r\nimport {\r\n    loginUserSuccess,\r\n    loginUserFailed,\r\n    registerUserSuccess,\r\n    registerUserFailed,\r\n    forgetPasswordSuccess,\r\n    forgetPasswordFailed\r\n} from './actions';\r\n\r\n/**\r\n * Sets the session\r\n * @param {*} user\r\n */\r\nconst setSession = (user) => {\r\n    let cookies = new Cookies();\r\n    if (user) cookies.set('user', JSON.stringify(user), { path: '/' });\r\n    else cookies.remove('user', { path: '/' });\r\n};\r\n/**\r\n * Login the user\r\n * @param {*} payload - username and password\r\n */\r\nfunction* login({ payload: { username, password } }) {\r\n    const options = {\r\n        body: JSON.stringify({ username, password }),\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' }\r\n    };\r\n\r\n    try {\r\n        const response = yield call(fetchJSON, CAPITAL_FARM_SERVER_URL + '/api/login', options);\r\n        setSession(response);\r\n        yield put(loginUserSuccess(response));\r\n    } catch (error) {\r\n        let message;\r\n        switch (error.status) {\r\n            case 500:\r\n                message = 'Internal Server Error';\r\n                break;\r\n            case 401:\r\n                message = 'Invalid credentials';\r\n                break;\r\n            default:\r\n                message = error;\r\n        }\r\n        yield put(loginUserFailed(message));\r\n        setSession(null);\r\n    }\r\n}\r\n\r\n/**\r\n * Logout the user\r\n * @param {*} param0\r\n */\r\nfunction* logout({ payload: { history } }) {\r\n    try {\r\n        setSession(null);\r\n        yield call(() => {\r\n            history.push('/account/login');\r\n        });\r\n    } catch (error) {}\r\n}\r\n\r\n/**\r\n * Register the user\r\n */\r\nfunction* register({ payload: { fullname, email, password } }) {\r\n    const options = {\r\n        body: JSON.stringify({ fullname, email, password }),\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' }\r\n    };\r\n\r\n    try {\r\n        const response = yield call(fetchJSON, '/users/register', options);\r\n        yield put(registerUserSuccess(response));\r\n    } catch (error) {\r\n        let message;\r\n        switch (error.status) {\r\n            case 500:\r\n                message = 'Internal Server Error';\r\n                break;\r\n            case 401:\r\n                message = 'Invalid credentials';\r\n                break;\r\n            default:\r\n                message = error;\r\n        }\r\n        yield put(registerUserFailed(message));\r\n    }\r\n}\r\n\r\n/**\r\n * forget password\r\n */\r\nfunction* forgetPassword({ payload: { username } }) {\r\n    const options = {\r\n        body: JSON.stringify({ username }),\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' }\r\n    };\r\n\r\n    try {\r\n        const response = yield call(fetchJSON, '/users/password-reset', options);\r\n        yield put(forgetPasswordSuccess(response.message));\r\n    } catch (error) {\r\n        let message;\r\n        switch (error.status) {\r\n            case 500:\r\n                message = 'Internal Server Error';\r\n                break;\r\n            case 401:\r\n                message = 'Invalid credentials';\r\n                break;\r\n            default:\r\n                message = error;\r\n        }\r\n        yield put(forgetPasswordFailed(message));\r\n    }\r\n}\r\n\r\nexport function* watchLoginUser() {\r\n    yield takeEvery(LOGIN_USER, login);\r\n}\r\n\r\nexport function* watchLogoutUser() {\r\n    yield takeEvery(LOGOUT_USER, logout);\r\n}\r\n\r\nexport function* watchRegisterUser() {\r\n    yield takeEvery(REGISTER_USER, register);\r\n}\r\n\r\nexport function* watchForgetPassword() {\r\n    yield takeEvery(FORGET_PASSWORD, forgetPassword);\r\n}\r\n\r\nfunction* authSaga() {\r\n    yield all([fork(watchLoginUser), fork(watchLogoutUser), fork(watchRegisterUser), fork(watchForgetPassword)]);\r\n}\r\n\r\nexport default authSaga;","// @flow\nimport {\n    LOGIN_USER,\n    LOGIN_USER_SUCCESS,\n    LOGIN_USER_FAILED,\n    LOGOUT_USER,\n    REGISTER_USER,\n    REGISTER_USER_SUCCESS,\n    REGISTER_USER_FAILED,\n    FORGET_PASSWORD,\n    FORGET_PASSWORD_SUCCESS,\n    FORGET_PASSWORD_FAILED,\n} from './constants';\n\n\nexport const loginUser = (username, password) => ({\n    type: LOGIN_USER,\n    payload: { username, password },\n});\n\nexport const loginUserSuccess = (user) => ({\n    type: LOGIN_USER_SUCCESS,\n    payload: user,\n});\n\nexport const loginUserFailed = (error) => ({\n    type: LOGIN_USER_FAILED,\n    payload: error,\n});\n\nexport const registerUser = (fullname, email, password) => ({\n    type: REGISTER_USER,\n    payload: { fullname, email, password },\n});\n\nexport const registerUserSuccess = (user) => ({\n    type: REGISTER_USER_SUCCESS,\n    payload: user,\n});\n\nexport const registerUserFailed = (error) => ({\n    type: REGISTER_USER_FAILED,\n    payload: error,\n});\n\nexport const logoutUser = (history) => ({\n    type: LOGOUT_USER,\n    payload: { history },\n});\n\nexport const forgetPassword = (username) => ({\n    type: FORGET_PASSWORD,\n    payload: { username },\n});\n\nexport const forgetPasswordSuccess = (passwordResetStatus) => ({\n    type: FORGET_PASSWORD_SUCCESS,\n    payload: passwordResetStatus,\n});\n\nexport const forgetPasswordFailed = (error) => ({\n    type: FORGET_PASSWORD_FAILED,\n    payload: error,\n});\n","// @flow\nimport {\n    CHANGE_LAYOUT,\n    CHANGE_LAYOUT_WIDTH,\n    CHANGE_SIDEBAR_THEME,\n    CHANGE_SIDEBAR_TYPE,\n    TOGGLE_RIGHT_SIDEBAR,\n    SHOW_RIGHT_SIDEBAR,\n    HIDE_RIGHT_SIDEBAR,\n} from './constants';\n\n\nexport const changeLayout = (layout) => ({\n    type: CHANGE_LAYOUT,\n    payload: layout,\n});\n\nexport const changeLayoutWidth = (width) => ({\n    type: CHANGE_LAYOUT_WIDTH,\n    payload: width,\n});\n\nexport const changeSidebarTheme = (theme) => ({\n    type: CHANGE_SIDEBAR_THEME,\n    payload: theme,\n});\n\nexport const changeSidebarType = (sidebarType) => ({\n    type: CHANGE_SIDEBAR_TYPE,\n    payload: sidebarType,\n});\n\nexport const toggleRightSidebar = () => ({\n    type: TOGGLE_RIGHT_SIDEBAR,\n    payload: null,\n});\n\nexport const showRightSidebar = () => ({\n    type: SHOW_RIGHT_SIDEBAR,\n    payload: null,\n});\n\nexport const hideRightSidebar = () => ({\n    type: HIDE_RIGHT_SIDEBAR,\n    payload: null,\n});\n","// @flow\r\nimport { all, call, fork, takeEvery, put } from 'redux-saga/effects';\r\n\r\nimport {\r\n    CHANGE_LAYOUT,\r\n    CHANGE_LAYOUT_WIDTH,\r\n    CHANGE_SIDEBAR_THEME,\r\n    CHANGE_SIDEBAR_TYPE,\r\n    TOGGLE_RIGHT_SIDEBAR,\r\n    SHOW_RIGHT_SIDEBAR,\r\n    HIDE_RIGHT_SIDEBAR,\r\n} from './constants';\r\nimport * as layoutConstants from '../../constants';\r\nimport {\r\n    changeSidebarTheme as changeLeftSidebarThemeAction,\r\n    changeSidebarType as changeSidebarTypeAction,\r\n} from './actions';\r\n\r\n/**\r\n * Changes the body attribute\r\n */\r\nfunction changeBodyAttribute(attribute, value) {\r\n    if (document.body) document.body.setAttribute(attribute, value);\r\n    return true;\r\n}\r\n\r\n/**\r\n * Toggle the class on body\r\n * @param {*} cssClass\r\n */\r\nfunction manageBodyClass(cssClass, action = 'toggle') {\r\n    switch (action) {\r\n        case 'add':\r\n            if (document.body) document.body.classList.add(cssClass);\r\n            break;\r\n        case 'remove':\r\n            if (document.body) document.body.classList.remove(cssClass);\r\n            break;\r\n        default:\r\n            if (document.body) document.body.classList.toggle(cssClass);\r\n            break;\r\n    }\r\n\r\n    return true;\r\n}\r\n\r\n/**\r\n * ---------------------------------------------------------------------------------------------------------------------------\r\n * Note: Following are the functions which allows you to save the user prefrences on backend side by making an api request.\r\n * For now, we are just applying the required logic on frontend side\r\n * ----------------------------------------------------------------------------------------------------------------------------\r\n */\r\n\r\n/**\r\n * Changes the layout type\r\n * @param {*} param0\r\n */\r\nfunction* changeLayout({ payload: layout }) {\r\n    try {\r\n        yield call(changeBodyAttribute, 'data-layout', layout);\r\n        if (layout === layoutConstants.LAYOUT_VERTICAL) {\r\n            yield put(changeLeftSidebarThemeAction(layoutConstants.LEFT_SIDEBAR_THEME_DEFAULT));\r\n            yield put(changeSidebarTypeAction(layoutConstants.LEFT_SIDEBAR_TYPE_FIXED));\r\n        }\r\n\r\n        if (layout === layoutConstants.LAYOUT_HORIZONTAL) {\r\n            yield put(changeLeftSidebarThemeAction(layoutConstants.LEFT_SIDEBAR_THEME_DEFAULT));\r\n            yield put(changeSidebarTypeAction(layoutConstants.LEFT_SIDEBAR_TYPE_FIXED));\r\n        }\r\n    } catch (error) {}\r\n}\r\n\r\n/**\r\n * Changes the layout width\r\n * @param {*} param0\r\n */\r\nfunction* changeLayoutWidth({ payload: width }) {\r\n    try {\r\n        if (width === layoutConstants.LAYOUT_WIDTH_BOXED) {\r\n            yield call(manageBodyClass, 'left-side-menu-condensed', 'add');\r\n            yield call(manageBodyClass, 'boxed-layout', 'add');\r\n        } else {\r\n            yield call(manageBodyClass, 'left-side-menu-condensed', 'remove');\r\n            yield call(manageBodyClass, 'boxed-layout', 'remove');\r\n        }\r\n    } catch (error) {}\r\n}\r\n\r\n/**\r\n * Changes the left sidebar theme\r\n * @param {*} param0\r\n */\r\nfunction* changeLeftSidebarTheme({ payload: theme }) {\r\n    try {\r\n        if (theme === layoutConstants.LEFT_SIDEBAR_THEME_DARK) {\r\n            yield call(manageBodyClass, 'left-side-menu-dark', 'add');\r\n        } else {\r\n            yield call(manageBodyClass, 'left-side-menu-dark', 'remove');\r\n        }\r\n    } catch (error) {}\r\n}\r\n\r\n/**\r\n * Changes the left sidebar type\r\n * @param {*} param0\r\n */\r\nfunction* changeLeftSidebarType({ payload: type }) {\r\n    try {\r\n        switch (type) {\r\n            case layoutConstants.LEFT_SIDEBAR_TYPE_CONDENSED:\r\n                yield call(manageBodyClass, 'left-side-menu-condensed', 'add');\r\n                break;\r\n            case layoutConstants.LEFT_SIDEBAR_TYPE_SCROLLABLE:\r\n                yield call(manageBodyClass, 'left-side-menu-condensed', 'remove');\r\n                yield call(manageBodyClass, 'scrollable-layout', 'add');\r\n                break;\r\n            default:\r\n                yield call(manageBodyClass, 'left-side-menu-condensed', 'remove');\r\n                yield call(manageBodyClass, 'scrollable-layout', 'remove');\r\n                break;\r\n        }\r\n    } catch (error) {}\r\n}\r\n\r\n/**\r\n * Toggles the rightsidebar\r\n */\r\nfunction* toggleRightSidebar() {\r\n    try {\r\n        yield call(manageBodyClass, 'right-bar-enabled');\r\n    } catch (error) {}\r\n}\r\n\r\n/**\r\n * Show the rightsidebar\r\n */\r\nfunction* showRightSidebar() {\r\n    try {\r\n        yield call(manageBodyClass, 'right-bar-enabled', 'add');\r\n    } catch (error) {}\r\n}\r\n\r\n/**\r\n * Hides the rightsidebar\r\n */\r\nfunction* hideRightSidebar() {\r\n    try {\r\n        yield call(manageBodyClass, 'right-bar-enabled', 'remove');\r\n    } catch (error) {}\r\n}\r\n\r\n/**\r\n * Watchers\r\n */\r\nexport function* watchChangeLayoutType() {\r\n    yield takeEvery(CHANGE_LAYOUT, changeLayout);\r\n}\r\n\r\nexport function* watchChangeLayoutWidth() {\r\n    yield takeEvery(CHANGE_LAYOUT_WIDTH, changeLayoutWidth);\r\n}\r\n\r\nexport function* watchChangeLeftSidebarTheme() {\r\n    yield takeEvery(CHANGE_SIDEBAR_THEME, changeLeftSidebarTheme);\r\n}\r\n\r\nexport function* watchChangeLeftSidebarType() {\r\n    yield takeEvery(CHANGE_SIDEBAR_TYPE, changeLeftSidebarType);\r\n}\r\n\r\nexport function* watchToggleRightSidebar() {\r\n    yield takeEvery(TOGGLE_RIGHT_SIDEBAR, toggleRightSidebar);\r\n}\r\n\r\nexport function* watchShowRightSidebar() {\r\n    yield takeEvery(SHOW_RIGHT_SIDEBAR, showRightSidebar);\r\n}\r\n\r\nexport function* watchHideRightSidebar() {\r\n    yield takeEvery(HIDE_RIGHT_SIDEBAR, hideRightSidebar);\r\n}\r\n\r\nfunction* LayoutSaga() {\r\n    yield all([\r\n        fork(watchChangeLayoutType),\r\n        fork(watchChangeLayoutWidth),\r\n        fork(watchChangeLeftSidebarTheme),\r\n        fork(watchChangeLeftSidebarType),\r\n        fork(watchToggleRightSidebar),\r\n        fork(watchShowRightSidebar),\r\n        fork(watchHideRightSidebar),\r\n    ]);\r\n}\r\n\r\nexport default LayoutSaga;\r\n","\n/**\n * Flatten the nested list of menu items\n */\nlet uuid = 1;\n\nconst assignIdAndParent = (menuItems, parentId) => {\n    menuItems = menuItems || [];\n    menuItems.forEach(item => {\n        const id = item.id || uuid;\n        uuid += 1;\n        item.id = id;\n        item.parentId = item.parentId || parentId;\n        item.active = false;\n\n        if (typeof item.children !== 'undefined') {\n            assignIdAndParent(item.children, id);\n        }\n    });\n};\n\nexport default (menuItems) => {\n    assignIdAndParent(menuItems);\n    return menuItems;\n};\n","// @flow\nimport {\n    INIT_MENU,\n    INIT_MENU_SUCCESS,\n    CHANGE_ACTIVE_MENU_FROM_LOCATION,\n    CHANGE_ACTIVE_MENU_FROM_LOCATION_SUCCESS,\n} from './constants';\n\nexport const initMenu = () => ({\n    type: INIT_MENU,\n    payload: {},\n});\n\nexport const initMenuSuccess = (menuItems) => ({\n    type: INIT_MENU_SUCCESS,\n    payload: { menuItems },\n});\n\nexport const changeActiveMenuFromLocation = () => ({\n    type: CHANGE_ACTIVE_MENU_FROM_LOCATION,\n    payload: {},\n});\n\nexport const changeActiveMenuFromLocationSuccess = (activatedMenuItemIds) => ({\n    type: CHANGE_ACTIVE_MENU_FROM_LOCATION_SUCCESS,\n    payload: { activatedMenuItemIds },\n});\n","// @flow\r\nimport { all, call, put, fork, takeEvery } from 'redux-saga/effects';\r\n\r\nimport { INIT_MENU, CHANGE_ACTIVE_MENU_FROM_LOCATION } from './constants';\r\nimport { authProtectedRoutes as routes } from '../../routes';\r\nimport assignIds from './utils';\r\nimport { initMenuSuccess, changeActiveMenuFromLocationSuccess } from './actions';\r\n\r\n/**\r\n * Activate menu items from location\r\n * @param {*} menuItems\r\n */\r\nconst getActivatedMenuItemIds = menuItems => {\r\n    var matchingItems = [];\r\n    for (var menuItem of menuItems) {\r\n        if (window.location.pathname.indexOf(menuItem.path) === 0) {\r\n            matchingItems.push(menuItem.id);\r\n        }\r\n\r\n        if (typeof menuItem.children !== 'undefined') {\r\n            matchingItems = [...matchingItems, ...getActivatedMenuItemIds(menuItem.children)];\r\n        }\r\n    }\r\n    return matchingItems;\r\n};\r\n\r\n/**\r\n * Initilizes the menu\r\n */\r\nfunction* initMenuAndItems() {\r\n    try {\r\n        const menuItems = assignIds(routes);\r\n        yield put(initMenuSuccess(menuItems));\r\n    } catch (error) {}\r\n}\r\n\r\n/**\r\n * change the active menu item based on location\r\n */\r\nfunction* changeActiveMenuFromLocation() {\r\n    try {\r\n        const menuItems = assignIds(routes);\r\n        const activatedMenuItemIds = yield call(getActivatedMenuItemIds, menuItems);\r\n        yield put(changeActiveMenuFromLocationSuccess(activatedMenuItemIds));\r\n    } catch (error) {}\r\n}\r\n\r\n/**\r\n * Watchers\r\n */\r\nexport function* watchMenuInit() {\r\n    yield takeEvery(INIT_MENU, initMenuAndItems);\r\n}\r\n\r\nexport function* watchMenuChange() {\r\n    yield takeEvery(CHANGE_ACTIVE_MENU_FROM_LOCATION, changeActiveMenuFromLocation);\r\n}\r\n\r\nfunction* appMenuSaga() {\r\n    yield all([fork(watchMenuInit), fork(watchMenuChange)]);\r\n}\r\n\r\nexport default appMenuSaga;\r\n","// @flow\nimport { all } from 'redux-saga/effects';\nimport authSaga from './auth/saga';\nimport layoutSaga from './layout/saga';\nimport appMenuSaga from './appMenu/saga';\n\nexport default function* rootSaga(getState: any): any {\n    yield all([authSaga(), layoutSaga(), appMenuSaga()]);\n}\n","// @flow\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport reducers from './reducers';\nimport sagas from './sagas';\n\nconst sagaMiddleware = createSagaMiddleware();\nconst middlewares = [sagaMiddleware];\n\nexport function configureStore(initialState: {}) {\n    const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\n    const store = createStore(reducers, initialState, composeEnhancers(applyMiddleware(...middlewares)));\n    sagaMiddleware.run(sagas);\n    return store;\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nimport { Provider } from 'react-redux';\r\nimport { configureStore } from './redux/store';\r\n\r\nReactDOM.render(\r\n\t<Provider store={configureStore()}>\r\n\t\t<App />\r\n\t</Provider>,\r\n\tdocument.getElementById('root')\r\n);\r\n"],"sourceRoot":""}